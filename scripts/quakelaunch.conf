# Location of id1 and the gamedirs.
# You MUST uncomment this line and set it to the correct path.
#basedir="/path/to/your/Quake/directory"

# Location of the Quake executable to use.
# You MUST uncomment this line and set it to the correct path.
#quake="/path/to/your/Quake/executable"

# Extra command-line arguments for Quake. If you have any arguments that
# will ALWAYS need to be used (other "-basedir" which will automatically be
# taken care of), you can specify them as the value for this quake_args option.
# Often you won't need to specify any value for quake_args and you can leave
# the line below commented out.
# If for example you need to disable userdata directory behavior in your
# Quake engine (see userdata.md for more details), you could specify the
# "-nohome" argument using this option.
#quake_args="some arguments here"

# Location of a special directory where Quake maintains gamedir-specific
# subdirectories for creating savegames etc. Usually Quake will just write
# directly to a subdirectory under basedir, and in that case you do NOT want
# to set any value for this userdata_home option.
# If you do need to specify a value for userdata_home to describe how your
# Quake engine behaves, then quakelaunch will look for savegames and write
# config files in the subdirectories of that location. Make sure to also
# set the value you want for install_to_userdata below!
# Here's the appropriate value for FTE if you don't use "-nohome":
#userdata_home="$HOME/.local/share/quake"
# Here's the appropriate value for DarkPlaces if you don't use "-nohome":
#userdata_home="$HOME/.darkplaces"

# Whether quakelaunch should install gamedirs under userdata_home (rather than
# basedir). The value for this only matters if userdata_home is set.
install_to_userdata=true

# Optional location to create .quake shortcuts when installing gamedirs.
# Uncomment this line and set its value only if you want to use shortcuts.
#shortcuts_dir="/path/to/some/directory"

# Whether to delete archive after installing its maps/mod into a gamedir.
cleanup_archive=true

# Set this to true if "Quake mod cleanup" should NOT delete the relevant
# subdirectory of basedir.
keep_basedir_subdirectory_on_cleanup=false

# Set this to true if "Quake mod cleanup" should NOT delete the relevant
# subdirectory of userdata_home. Only matters if userdata_home is set.
keep_userdata_subdirectory_on_cleanup=false

# Whether to lowercase some things that need to be lowercased. Note that this
# does not fix references to files from inside the bsp if those are wrong.
# As far as I know this needs to be set true except when using FTE.
fix_capitalization=true

# Whether to create symlinks to "fix" some of the common file reference errors
# mentioned above. So for example "foo.bsp" would get symlinks to make it also
# available as "FOO.bsp" and "Foo.bsp". These symlinks are not created "as
# needed", they are just created en masse (for any loose file in standard
# Quake subdirectories like maps/music/sound etc.) just in case one of those
# common mistakes occur. This should be a harmless thing to enable, but it
# will create a lot of symlink spam so it's false by default.
# Again this should not by needed by FTE but could help with other engines.
# NOTE: Setting this to true will also force fix_capitalization to true.
create_filename_symlinks=false

# Whether Python module expak is installed, with "pip install expak". This
# helps find maps in pak files when figuring out what map to launch for
# a gamedir that has no savegames. Things will still generally work w/o it.
# If you have this set true but have NOT installed expak, the script will
# beep and complain at you if there are pak files in the gamedir.
expak_installed=true

# If jam_keybind is defined, the specified key will be bound to an alias
# that can be used to go to the next map (alphabetically) in the set of maps
# in a gamedir. Good for working through mapjam/speedmap collections. If any
# pak files are present, expak_installed must be true for this to work.
jam_keybind=j

# Command-line args to use an Arcane Dimensions gamedir as a base game. I.e.
# so that non-standalone Arcane Dimensions map releases can be stored in their
# own gamedir rather than being merged into the Arcane Dimensions gamedir.
# Don't define this if your Quake engine can't do this. This is required to
# support auto-install of maps that require Arcane Dimensions.
# If you use a recent release of FTE, Quakespasm-Spiked, vkQuake, Ironwail, or
# DarkPlaces, you can uncomment the following line and then edit it to make
# sure it refers to what your AD directory is actually named. Other Quake
# engines may do this differently or not at all.
#ad_basegame_args="-game ad"

# Name of the Arcane Dimensions gamedir used if launching with ad_basegame_args
# defined above. This is used for sanity checking that AD is installed.
# Uncomment the following line if you have ad_basegame_args defined, and make
# sure that it is set to what your AD directory is actually named.
#ad_gamedir="ad"

# Similarly for Copper.
# If you use a recent release of FTE, Quakespasm-Spiked, vkQuake, Ironwail, or
# DarkPlaces, you can uncomment the following line and then edit it to make
# sure it refers to what your Copper directory is actually named. Other Quake
# engines may do this differently or not at all.
#copper_basegame_args="-game copper"

# Name of the Copper gamedir used if launching with copper_basegame_args
# defined above. This is used for sanity checking that Copper is installed.
# Uncomment the following line if you have copper_basegame_args defined, and make
# sure that it is set to what your Copper directory is actually named.
#copper_gamedir="copper"

# Same stuff as for AD and Copper above, but for Alkaline.
#alkaline_basegame_args="-game alkaline"
#alkaline_gamedir="alkaline"

# Icon name used by notify-send for posting notifications when warnings/errors
# happen in the script. If not defined, then a notification will not be posted.
notification_icon=dialog-warning

# Program used to play warning/error beeps. Must be able to take a path to a
# sound file as a command-line argument. If not defined, then a beep will not
# be played.
beep_player=paplay

# An array of sounds that can be used when warnings/errors happen in the
# script. The sound to play will be selected at random. If none defined, then
# a beep will not be played.
# Uncomment one or more of these lines and set the correct paths if you want
# these error sounds to play.
#beepsound[0]=/path/to/quakelaunch_sounds/pain1.wav
#beepsound[1]=/path/to/quakelaunch_sounds/pain2.wav
#beepsound[2]=/path/to/quakelaunch_sounds/pain3.wav
#beepsound[3]=/path/to/quakelaunch_sounds/pain4.wav

# Whether to show readme file(s) and allow viewing/editing the launch args
# the first time a gamedir is launched. If this is true then at least the
# config_editor property below must also be set to something that works for
# you (and you'll probably want to appropriately set the *_viewer property
# values too).
preview_readme_and_config=false

# Command line used to edit per-gamedir configs when preview_readme_and_config
# is true. The config filename will be added to the end of this command line;
# the end result needs to launch a GUI editor that allows modifying and saving
# the config file.
# For this to work properly, this command _must_ launch a new process that
# does not exit until the config file is closed. An example of doing this
# would be using "gedit" with the "-s" (standalone) argument.
config_editor="gedit -s"

# Command line used to view .txt files, and extension-less readme files, when
# preview_readme_and_config is true. The filename will be added to the end of
# this command line; the end result needs to launch a GUI editor that allows
# viewing the file. If this property is not set then .txt files and
# extension-less readme files will not be viewed.
# There may be many text files e.g. in a "jam" gamedir, so in this case it's
# nice if they will all get opened as tabs in a single window. An example of
# doing this would be using "gedit" WITHOUT the "-s" argument.
txt_viewer=gedit

# Similar options for .htm(l), .doc, .pdf, and .md file viewing. Using xdg-open
# for the command will just launch whatever the system default viewer is for
# those file extensions.
html_viewer=xdg-open
doc_viewer=xdg-open
pdf_viewer=xdg-open
md_viewer=xdg-open
